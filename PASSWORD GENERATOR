import random
import string


def generate_password(length, use_uppercase=True, use_digits=True, use_special=True):
    """Generate a random password with specified complexity"""
    characters = string.ascii_lowercase  # Always include lowercase

    if use_uppercase:
        characters += string.ascii_uppercase
    if use_digits:
        characters += string.digits
    if use_special:
        characters += string.punctuation

    # Ensure password contains at least one character from each selected category
    password = []
    if use_uppercase:
        password.append(random.choice(string.ascii_uppercase))
    if use_digits:
        password.append(random.choice(string.digits))
    if use_special:
        password.append(random.choice(string.punctuation))

    # Fill the rest of the password with random characters
    remaining_length = length - len(password)
    password.extend(random.choice(characters) for _ in range(remaining_length))

    # Shuffle to mix the required characters
    random.shuffle(password)

    return ''.join(password)


def get_yes_no_input(prompt):
    """Helper function to get yes/no input"""
    while True:
        response = input(prompt).strip().lower()
        if response in ('y', 'yes'):
            return True
        elif response in ('n', 'no'):
            return False
        print("Please enter 'y' or 'n'.")


def main():
    print("PASSWORD GENERATOR")
    print("------------------")

    try:
        # Get password length
        length = int(input("Enter password length (8-64 recommended): "))
        if length < 4:
            print("Password too short! Minimum length set to 4.")
            length = 4

        # Get complexity options
        print("\nPassword complexity options:")
        use_upper = get_yes_no_input("Include uppercase letters? (y/n): ")
        use_digits = get_yes_no_input("Include digits? (y/n): ")
        use_special = get_yes_no_input("Include special characters? (y/n): ")

        # Generate and display password
        password = generate_password(length, use_upper, use_digits, use_special)
        print("\nGenerated Password:")
        print(password)
        print(
            f"\nPassword strength: {'Strong' if len(password) >= 8 and (use_upper or use_digits or use_special) else 'Weak'}")

    except ValueError:
        print("Invalid input! Please enter a valid number for password length.")


if __name__ == "__main__":
    main()
